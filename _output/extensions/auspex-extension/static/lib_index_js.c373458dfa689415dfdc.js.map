{"version":3,"file":"lib_index_js.c373458dfa689415dfdc.js","mappings":";;;;;;;;;;;;;;;;;AAKuE;AAE9B;AAEzC;;GAEG;AACH,MAAM,MAAM,GAAgC;IAC1C,EAAE,EAAE,yBAAyB;IAC7B,WAAW,EAAE,8CAA8C;IAC3D,SAAS,EAAE,IAAI;IACf,QAAQ,EAAE,CAAC,iEAAe,CAAC;IAC3B,QAAQ,EAAE,CAAC,GAAoB,EAAE,OAAwB,EAAE,EAAE;QAC3D,OAAO,CAAC,GAAG,CAAC,gCAAgC,CAAC,CAAC;QAE9C,oCAAoC;QACpC,oCAAoC;QACpC,MAAM,SAAS,GAAG,GAAG,EAAE;YACrB,2DAA2D;YAC3D,MAAM,OAAO,GAAG,IAAI,mDAAM,EAAE,CAAC;YAC7B,MAAM,MAAM,GAAG,IAAI,gEAAc,CAAC,EAAE,OAAO,EAAE,CAAC,CAAC;YAC/C,MAAM,CAAC,EAAE,GAAG,YAAY,CAAC;YACzB,MAAM,CAAC,KAAK,CAAC,KAAK,GAAG,kBAAkB,CAAC;YACxC,MAAM,CAAC,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC;YAC7B,OAAO,MAAM,CAAC;QAChB,CAAC;QACD,IAAI,MAAM,GAAG,SAAS,EAAE,CAAC;QAEzB,6BAA6B;QAC7B,MAAM,OAAO,GAAW,iBAAiB,CAAC;QAC1C,GAAG,CAAC,QAAQ,CAAC,UAAU,CAAC,OAAO,EAAE;YAC/B,KAAK,EAAE,uBAAuB;YAC9B,OAAO,EAAE,GAAG,EAAE;gBACZ,oCAAoC;gBACpC,IAAI,MAAM,CAAC,UAAU,EAAE;oBACrB,MAAM,GAAG,SAAS,EAAE,CAAC;iBACtB;gBACD,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE;oBACtB,4DAA4D;oBAC5D,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;iBAC/B;gBACD,sBAAsB;gBACtB,GAAG,CAAC,KAAK,CAAC,YAAY,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;YACpC,CAAC;SACF,CAAC,CAAC;QAEH,kCAAkC;QAClC,OAAO,CAAC,OAAO,CAAC,EAAE,OAAO,EAAE,QAAQ,EAAE,UAAU,EAAE,CAAC,CAAC;IACrD,CAAC;CACF,CAAC;AAEF,iEAAe,MAAM,EAAC","sources":["webpack://auspex-extension/./src/index.ts"],"sourcesContent":["import {\n  JupyterFrontEnd,\n  JupyterFrontEndPlugin\n} from '@jupyterlab/application';\n\nimport { ICommandPalette, MainAreaWidget } from '@jupyterlab/apputils';\n\nimport { Widget } from '@lumino/widgets';\n\n/**\n * Initialization data for the auspex-extension extension.\n */\nconst plugin: JupyterFrontEndPlugin<void> = {\n  id: 'auspex-extension:plugin',\n  description: 'A JupyterLab extension for AUSPEX framework.',\n  autoStart: true,\n  requires: [ICommandPalette],\n  activate: (app: JupyterFrontEnd, palette: ICommandPalette) => {\n    console.log('AUSPEX extension is activated!');\n\n    // Define a widget creator function,\n    // then call it to make a new widget\n    const newWidget = () => {\n      // Create a blank content widget inside of a MainAreaWidget\n      const content = new Widget();\n      const widget = new MainAreaWidget({ content });\n      widget.id = 'ext-auxpex';\n      widget.title.label = 'AUSPEX Extension';\n      widget.title.closable = true;\n      return widget;\n    }\n    let widget = newWidget();\n\n    // Add an application command\n    const command: string = 'ext-auxpex:open';\n    app.commands.addCommand(command, {\n      label: 'Open AUSPEX Extension',\n      execute: () => {\n        // Regenerate the widget if disposed\n        if (widget.isDisposed) {\n          widget = newWidget();\n        }\n        if (!widget.isAttached) {\n          // Attach the widget to the main work area if it's not there\n          app.shell.add(widget, 'main');\n        }\n        // Activate the widget\n        app.shell.activateById(widget.id);\n      }\n    });\n\n    // Add the command to the palette.\n    palette.addItem({ command, category: 'Tutorial' });\n  }\n};\n\nexport default plugin;\n"],"names":[],"sourceRoot":""}